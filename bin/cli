#!/usr/bin/env node

const inquirer = require('inquirer');
const { init } = require('../lib/init');

const questions = [
  {
    type: 'input',
    name: 'project',
    message: 'Project name:',
    default() {
      return 'electron-project';
    },
  },
  {
    type: 'list',
    name: 'template',
    message: 'Select a framework:',
    choices: [
      'vanilla',
      'react',
      'react-ts',
      'vue',
      'vue-ts',
      'svelte',
      'svelte-ts',
    ],
  },
];

const validateTemplateName = (template) => {
  const templates = [
    'vanilla',
    'react',
    'react-ts',
    'vue',
    'vue-ts',
    'svelte',
    'svelte-ts',
  ];

  return templates.includes(template) ? true : false;
};

const parseArgs = async (rawArgs) => {
  const slicedArgs = rawArgs.slice(2);

  const argv = require('yargs')(slicedArgs)
    .usage('\nUsage: gen-electron <project-name> --template <template>')
    .option('template', {
      type: 'string',
      alias: 't',
      description: 'vanilla, react, react-ts, vue, vue-ts, svelte, svelte-ts',
    })
    .help()
    .locale('en').argv;

  if (!validateTemplateName(argv.template) || argv._.length === 0) {
    const result = await inquirer.prompt(questions);
    return [result.template, result.project];
  } else {
    return [argv.template, argv._[0]];
  }
};

(async () => {
  const args = await parseArgs(process.argv);
  await init(args[1], args[0]);
})();
